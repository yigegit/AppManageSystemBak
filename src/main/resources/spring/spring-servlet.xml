<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.3.xsd
	">

    <!--配置注解扫描器
        排除service注解
    -->
    <context:component-scan base-package="com.mercer">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--配置一个试图解析器
    常用内部资源试图解析器
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--1.前缀-->
        <property name="prefix" value="/jsp/"/>
        <!--2.后缀-->
        <property name="suffix" value=".jsp"/>

    </bean>

    <!--加上MVC驱动-->
    <mvc:annotation-driven>
        <!--配置消息转换器以支持JSON的使用-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--文件上传解析器
        id必须为multipartResolver，原因是源代码里写死为这个
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--总的上传文件的大小-->
        <property name="maxUploadSize" value="10242389898989"/>
        <!--指定上传的编码-->
        <property name="defaultEncoding" value="utf-8"/>
        <!--单个文件允许的最大大小-->
        <property name="maxUploadSizePerFile" value="120523"/>

    </bean>


    <!--默认的servlet处理者,静态资源处理-->
    <mvc:default-servlet-handler/>

    <!--拦截器-->
 <!--   <mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash;/*的写法只能拦截/name的方法，只能有一层，不是多层拦截&ndash;&gt;
            <mvc:mapping path="/**/*"/>
            <bean class="com.mercer.interceptors.MethodTImerInterceptor">

            </bean>
        </mvc:interceptor>

        <mvc:interceptor>
            &lt;!&ndash;只想拦截/user/**/*
          还需开放登陆权限
      &ndash;&gt;
            <mvc:mapping path="/user/**/*"/>
            &lt;!&ndash;排除登陆的URI&ndash;&gt;
            <mvc:exclude-mapping path="/user/login"/>
            <bean class="com.mercer.interceptors.SessionInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>-->



</beans>